<class
	name = "pkggraph_worker"
	title = "Package Builder - Where Work Gets Done"
	script = "../exec/zproto_client_c"
	protocol_class = "pkggraph_msg"
	project_header = "pkggraph_worker.h"
	package_dir = "."
	>

	<provided_pipe />

	<state name = "start" inherit = "defaults">
		<event name = "set build params">
			<action name = "set build params" />
		</event>
		<event name = "construct" next = "negotiate">
			<action name = "connect to server" />
			<action name = "send" message = "HELLO" />
		</event>
		<event name = "connect error" next = "die">
			<action name = "complain about connection error" />
		</event>
		<after>
			<action name = "flag bootstrap wanted" />
		</after>
	</state>
	<state name = "negotiate" inherit = "defaults">
		<event name = "ROGER" next = "hesitate">
			<action name = "send" message = "IMAWORKER" />
		</event>
	</state>
	<state name = "hesitate" inherit = "defaults">
		<event name = "ROGER" next = "preparing" />
	</state>

	<state name = "preparing" inherit = "defaults">
		<before>
			<action name = "set timeout high" />
			<action name = "act if bootstrap is wanted">
				Call bootstrap_done when that's complete.
			</action>
		</before>
		<event name = "bootstrap done" next = "ready">
			<action name = "prepare icanhelp" />
			<action name = "send" message = "ICANHELP">
				ICANHELP if coming from any different state
			</action>
		</event>
	</state>

	<state name = "ready" inherit = "defaults">
		<event name = "UPDATE BOOTSTRAP" next = "bootstrap regular">
			<action name = "do bootstrap update" />
		</event>
		<event name = "NEEDPKG" next = "working">
			no-op
		</event>
	</state>

	<state name = "bootstrap regular" inherit = "defaults">
		<event name = "NEEDPKG" next = "bootstrap build wanted" />
		<event name = "bootstrap done" next = "ready" />
	</state>

	<state name = "bootstrap build wanted" inherit = "defaults">
		<event name = "bootstrap done" next = "working">
			<action name = "begin building pkg" />
		</event>
	</state>

	<state name = "working" inherit = "defaults">
		<before>
			<action name = "set timeout low" />
			<action name = "do git ff" />
			<action name = "begin building pkg" />
		</before>
		<event name = "UPDATE BOOTSTRAP">
			<action name = "flag bootstrap wanted" />
		</event>
		<event name = "expired">
			<action name = "get log data" />
			<action name = "send" message = "LOGHERE" />
		</event>
		<event name = "job ended" next = "preparing">
			<action name = "send" message = "JOB ENDED" />
		</event>
	</state>

	<state name = "die">
		<before>
			<action name = "cease all operations" />
			<action name = "terminate" />
		</before>
		<event name = "*">
			We shouldn't ever get here... but the code generation
			doesn't like empty states.
			<action name = "send" message = "INVALID" />
		</event>
	</state>

	<state name = "defaults">
		<event name = "IFORGOTU" next = "negotiate">
			<action name = "send" message = "HELLO" />
		</event>
		<event name = "INVALID" next = "die" />
		<event name = "*" next = "negotiate">
			<action name = "send" message = "HELLO" />
		</event>
		<event name = "KTHNKSBYE" next = "die" />
		<event name = "expired">
			<action name = "send" message = "PING" />
		</event>
		<event name = "ROGER" />
		<event name = "set repopath">
			<action name = "set repopath to provided" />
		</event>
	</state>

	<method name = "construct">
		Used to connect to the server.
		<field name = "endpoint" type = "string" />
	</method>

	<method name = "set repopath">
		<field name = "repopath" type = "string" />
	</method>

	<method name = "set build params" return = "ok">
		<field name = "hostarch" type = "string" />
		<field name = "targetarch" type = "string" />
		<field name = "iscross" type = "number" size = "1" />
		<field name = "cost" type = "number" size = "2" />
		<accept reply = "STATUS" />
	</method>

	<reply name = "STATUS">
		<field name = "ok" type = "number" />
	</reply>

	<custom filename = "pkgall_client_ssl.xml" language = "C" />
</class>
